From a1138586df1806e54c1f63efbacf6e568934b8dd Mon Sep 17 00:00:00 2001
From: Techcable <Techcable@techcable.net>
Date: Fri, 18 Mar 2016 10:53:24 -0700
Subject: [PATCH] Better Decompression Sanity

Fixes #40

diff --git a/proxy/src/main/java/net/md_5/bungee/compress/PacketDecompressor.java b/proxy/src/main/java/net/md_5/bungee/compress/PacketDecompressor.java
index 1612ffcf..d115a046 100644
--- a/proxy/src/main/java/net/md_5/bungee/compress/PacketDecompressor.java
+++ b/proxy/src/main/java/net/md_5/bungee/compress/PacketDecompressor.java
@@ -1,5 +1,7 @@
 package net.md_5.bungee.compress;
 
+import lombok.*;
+
 import com.google.common.base.Preconditions;
 import io.netty.buffer.ByteBuf;
 import io.netty.channel.ChannelHandlerContext;
@@ -9,10 +11,11 @@ import net.md_5.bungee.jni.zlib.BungeeZlib;
 import net.md_5.bungee.protocol.DefinedPacket;
 import net.md_5.bungee.protocol.OverflowPacketException;
 
+@RequiredArgsConstructor
 public class PacketDecompressor extends MessageToMessageDecoder<ByteBuf>
 {
 
-    private static final int MAX_DECOMPRESSED_LEN = 1 << 23;
+    private final int compressionThreshold;
     private final BungeeZlib zlib = CompressFactory.zlib.newInstance();
 
     @Override
@@ -36,10 +39,8 @@ public class PacketDecompressor extends MessageToMessageDecoder<ByteBuf>
             out.add( in.retain() );
         } else
         {
-            if ( size > MAX_DECOMPRESSED_LEN )
-            {
-                throw new OverflowPacketException( "Packet may not be larger than " + MAX_DECOMPRESSED_LEN + " bytes" );
-            }
+            Preconditions.checkArgument( size >= compressionThreshold, "Decompressed size %s less than compression threshold %s", size, compressionThreshold);
+            ByteBuf decompressed = ctx.alloc().directBuffer();
 
             // Do not use size as max capacity, as its possible that the entity rewriter increases the size afterwards
             // This would result in a kick (it happens rarely as the entity ids size must differ)
@@ -47,7 +48,7 @@ public class PacketDecompressor extends MessageToMessageDecoder<ByteBuf>
             try
             {
                 zlib.process( in, decompressed );
-                Preconditions.checkState( decompressed.readableBytes() == size, "Decompressed packet size mismatch" );
+                Preconditions.checkArgument( decompressed.readableBytes() == size, "Decompressed size %s is not equal to actual decompressed bytes", size, decompressed.readableBytes());
 
                 out.add( decompressed );
                 decompressed = null;
-- 
2.46.0.windows.1

